require("../../config/config").config("bf");
const { removeCatFromProduct } = require("../../functions/products/removeCatFromProduct");
/**
 * issue with this script is that its prematurely returning an empty array and not the expected output from promise allsettled
 */

/**
 * This needs to be tested before using
 * @param {*} productIds
 * @param {*} categoryName
 * @returns
 */
const removeCategoryFromSpecificProducts = (productIds, categoryId) =>
  new Promise((resolve, reject) => {
    let promises = [];
    productIds.forEach((productId) => {
      let id = productId[Object.keys(productId)[0]];
      promises.push(removeCatFromProduct(id, categoryId));
    });
    Promise.allSettled(promises).then(resolve).catch(reject);
  });
const productIds = [{"Product ID":5894},
{"Product ID":5895},
{"Product ID":5897},
{"Product ID":5898},
{"Product ID":5905},
{"Product ID":5906},
{"Product ID":5907},
{"Product ID":5908},
{"Product ID":5912},
{"Product ID":5913},
{"Product ID":5921},
{"Product ID":5922},
{"Product ID":5923},
{"Product ID":5924},
{"Product ID":5925},
{"Product ID":5926},
{"Product ID":5927},
{"Product ID":5931},
{"Product ID":5932},
{"Product ID":5933},
{"Product ID":5934},
{"Product ID":5935},
{"Product ID":5936},
{"Product ID":5937},
{"Product ID":5938},
{"Product ID":5944},
{"Product ID":5945},
{"Product ID":5946},
{"Product ID":5947},
{"Product ID":5948},
{"Product ID":5949},
{"Product ID":5950},
{"Product ID":5951},
{"Product ID":5952},
{"Product ID":5953},
{"Product ID":5954},
{"Product ID":5956},
{"Product ID":5957},
{"Product ID":5959},
{"Product ID":5960},
{"Product ID":5968},
{"Product ID":5969},
{"Product ID":5970},
{"Product ID":5971},
{"Product ID":5972},
{"Product ID":5973},
{"Product ID":5974},
{"Product ID":5975},
{"Product ID":5976},
{"Product ID":5978},
{"Product ID":5979},
{"Product ID":5980},
{"Product ID":5981},
{"Product ID":5982},
{"Product ID":5984},
{"Product ID":5985},
{"Product ID":5986},
{"Product ID":5987},
{"Product ID":5988},
{"Product ID":5989},
{"Product ID":5990},
{"Product ID":5992},
{"Product ID":5993},
{"Product ID":5994},
{"Product ID":5995},
{"Product ID":5996},
{"Product ID":5997},
{"Product ID":5999},
{"Product ID":6000},
{"Product ID":6001},
{"Product ID":6002},
{"Product ID":6004},
{"Product ID":6005},
{"Product ID":6006},
{"Product ID":6007},
{"Product ID":6008},
{"Product ID":6009},
{"Product ID":6010},
{"Product ID":6011},
{"Product ID":6012},
{"Product ID":6013},
{"Product ID":6014},
{"Product ID":6015},
{"Product ID":6016},
{"Product ID":6017},
{"Product ID":6019},
{"Product ID":6020},
{"Product ID":6021},
{"Product ID":6022},
{"Product ID":6023},
{"Product ID":6025},
{"Product ID":6026},
{"Product ID":6027},
{"Product ID":6028},
{"Product ID":6029},
{"Product ID":6030},
{"Product ID":6031},
{"Product ID":6032},
{"Product ID":6033},
{"Product ID":6034},
{"Product ID":6035},
{"Product ID":6036},
{"Product ID":6037},
{"Product ID":6038},
{"Product ID":6039},
{"Product ID":6041},
{"Product ID":6042},
{"Product ID":6043},
{"Product ID":6044},
{"Product ID":6045},
{"Product ID":6046},
{"Product ID":6047},
{"Product ID":6048},
{"Product ID":6049},
{"Product ID":6054},
{"Product ID":6055},
{"Product ID":6056},
{"Product ID":6057},
{"Product ID":6058},
{"Product ID":6059},
{"Product ID":6063},
{"Product ID":6065},
{"Product ID":6066},
{"Product ID":6067},
{"Product ID":6068},
{"Product ID":6069},
{"Product ID":6073},
{"Product ID":6074},
{"Product ID":6075},
{"Product ID":6076},
{"Product ID":6077},
{"Product ID":6078},
{"Product ID":6079},
{"Product ID":6080},
{"Product ID":6081},
{"Product ID":6082},
{"Product ID":6087},
{"Product ID":6092},
{"Product ID":6093},
{"Product ID":6094},
{"Product ID":6095},
{"Product ID":6096},
{"Product ID":6097},
{"Product ID":6098}]
const catId = 669;
removeCategoryFromSpecificProducts(productIds, catId)
  .then((res) =>
    console.log("removeCategoryFromSpecificProducts response", res)
  )
  .catch((err) => console.log(err));
